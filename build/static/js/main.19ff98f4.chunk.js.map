{"version":3,"sources":["reducers/userReducer.js","reducers/redirects.js","reducers/errors.js","reducers/arenaReducer.js","reducers/eventReducer.js","reducers/securityReducer.js","reducers/athleteReducer.js","reducers/internalReducer.js","reducers/index.js","store.js","actions/redirectActions.js","actions/eventActions.js","PurchaseTickets.js","MyEvents.js","actions/securityActions.js","OfficerPage.js","actions/athleteActions.js","actions/internalActions.js","AthleteBio.js","GruntPage.js","AthleteScheduler.js","Navbar.js","EventTable.js","ViewEventData.js","actions/arenaActions.js","ArenaTable.js","NewArena.js","ViewAthleteData.js","Navigation.js","Dashboard.js","actions/userActions.js","Login.js","CreateUser.js","AllEvents.js","CreateEvent.js","AthleteSigningScheduler.js","Mux.js","serviceWorker.js","index.js","logo.svg"],"names":["userReducer","state","arguments","length","undefined","username","firstname","lastname","password","key","usertype","action","type","Object","objectSpread","payload","userType","redirect","page","errors","error","arenaReducer","allArenas","eventReducer","allEvents","myEvents","securityReducer","allSecurity","athleteReducer","allAthletes","internalReducer","createAccountOptions","searchEvent","searchAthlete","selectArena","selectSex","selectInches","selectFeet","selection","combineReducers","user","arena","event","athlete","security","internal","createStore","reducer","applyMiddleware","promise","thunk","logger","store","dispatch","getAllEvents","x","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","console","log","AllEvents","catch","getMyEvents","Registered","eventPair","e","a","eventStaffPrice","price","Number","eventPublicPrice","buyTicket","count","free","weekday","num","id","dict","Set","taffPrice","publicPrice","PurchaseTickets","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","handleChange","bind","assertThisInitialized","handleSubmit","handleStaffPriceChange","handlePublicPriceChange","buyPublicTickets","buyStaffTickets","buyAthleteTickets","calcPrice","calcPrice2","setX","setState","defineProperty","target","name","value","preventDefault","count2","div","document","getElementById","innerHTML","_this2","events","listItems","map","d","Name","Arena","current","TicketCount","capacity","ArenaCapacity","ticketPrice","PublicPrice","staffPrice","StaffPrice","day","Day","start","StartTime","duration","Duration","parseInt","filter","startsWith","t","react_default","createElement","Paper_default","style","padding","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","component","scope","Input_default","onBlur","placeholder","pattern","min","onClick","Button_default","color","variant","Component","connect","MyEvents","durations","startTimes","days","arenaLabel","_ref","getData","eventMap","keys","k","updateSecurity","needed","getAllSecurity","GruntPage","handleNeededChange","updateGuards","eventName","currentGuards","CurrentSecurity","SecurityNeeded","paperStyles","onChange","guards","s","first","First","last","Last","Username","shift","Shifts","guardSchedules","getAllAthletes","AllAthletes","athleteToggleEvent","username2","toggle","setOption","choice","age","heightMap","feet","inches","height","weight","bio","country","AthleteBio","handleName","handleSex","handleAge","handleHeight","handleWeight","handleBio","handleCountry","sex","updateBio","sexOption","feetOption","inchesOption","i","className","elevation","Select_default","MenuItem_default","Age","Weight","Bio","Country","CurrentGuards","AthleteScheduler","propValue","propName","flag","eventTable","text","bColor","getScheduleButton","logout","redirectCompetition","redirectBio","redirectTickets","redirectNewArena","redirectNewEvent","redirectPurchaseTickets","redirectSearches","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","classes","redirects","navList","AppBar_default","position","Toolbar_default","Typography_default","toUpperCase","icon","b","EventTable","Start","substring","IsOutdoors","HasField","HasTrack","IsAquatic","ViewEventData","toLowerCase","pv","input","src_EventTable","c","push","getAllArenas","AllArenas","ArenaTable","arenas","Capacity","NewArena","outdoors","aquatic","track","field","cap","Available","String","src_ArenaTable","class","ViewAthleteData","athleteName","Navigation","redirectAutographs","redirectSetBio","redirectAthleteTickets","redirectMyEvents","attemptLogin","user_type","src_GruntPage","OfficerPage","Navbar","Dashboard","pass","Key","UserType","Login","createUser","CreateUser","handleSelectChange","confirm","option","index_es","handleDayChange","handleStartChange","handleDurationChange","scheduleUpdate","dollars","Math","round","mt","at","dur","CanSchedule","schedule","arenaOptions","handleArenaChange","CreateEvent","src_AllEvents","dropSigning","u","tryNewSigning","AthleteSigningScheduler","includes","updateDay","updateStart","updateDuration","Mux","src_Login","src_CreateUser","src_NewArena","src_CreateEvent","src_Dashboard","src_AthleteSigningScheduler","src_AthleteScheduler","src_AthleteBio","src_PurchaseTickets","src_MyEvents","src_ViewEventData","src_ViewAthleteData","src_Navigation","Boolean","window","location","hostname","match","ReactDOM","render","es","src_Mux","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.19ff98f4.chunk.js","sourcesContent":["const userReducer = (state={username:\"X\", firstname : \"\", lastname: \"\", password:\"Y\", key:0, usertype:\"\"}, action) => {\n    switch(action.type) {\n        case \"ATTEMPT_LOGIN\" : {\n            state = {...state, username: action.payload.username, firstname: action.payload.firstname, lastname: action.payload.lastname, password: action.payload.password, key : action.payload.key, usertype:action.payload.usertype}\n        \n        break;\n        }\n        case \"CREATE_USER\" : {\n            state = {...state, username: action.payload.username, firstname: action.payload.firstname, lastname: action.payload.lastname, password: action.payload.password, key : action.payload.key, usertype:action.payload.usertype}\n        \n        break;\n        }\n\n        case \"LOGOUT\" : {\n            state = {...state, password: \"\", username: \"\", key:0, userType:\"\"}\n            break;\n        } \n\n    }\n    return state;\n};\n\nexport default userReducer;","const redirect = (state={page:\"LOGIN\"}, action) => {\n    switch(action.type) {\n        case \"CREATE_USER\" : {\n            state = {...state, page: \"CREATE_USER\"}\n            break;\n        }\n        case \"LOGIN\" : {\n            state = {...state, page: \"LOGIN\"}\n            break;\n        }\n        case \"DASHBOARD\" : {\n            state = {...state, page: \"DASHBOARD\"}\n            break;\n        } case \"CREATE_ARENA\" : {\n            state = {...state, page: \"CREATE_ARENA\"}\n            break;\n        } case \"CREATE_EVENT\" : {\n            state = {...state, page: \"CREATE_EVENT\"}\n            break;\n        }\n\n        case \"SCHEDULE_SIGNING\" : {\n            state = {...state, page: \"SCHEDULE_SIGNING\"}\n            break;\n        } case \"ATHLETE_COMPETITION\" : {\n            state = {...state, page: \"ATHLETE_COMPETITION\"}\n            break;\n        }\n\n\n        case \"PURCHASE\" : {\n            state = {...state, page: \"PURCHASE\"}\n            break;\n        } case \"SEARCH\" : {\n            state = {...state, page: \"SEARCH\"}\n            break;\n        }\n\n        case \"ATHLETE_PURCHASE\" : {\n            state = {...state, page: \"ATHLETE_PURCHASE\"}\n            break;\n\n        } case \"SET_BIO\" : {\n            state = {...state, page: \"SET_BIO\"}\n            break;\n        }\n\n        case \"MY_EVENTS\" : {\n            state = {...state, page: \"MY_EVENTS\"}\n            break;\n        }\n\n    }\n    return state;\n}\n\nexport default redirect;","const errors = (state={error:\"\"}, action) => {\n    switch(action.type) {\n        case \"USER_TAKEN\" : {\n            state = {...state, error: \"USER_TAKEN\"}\n            break;\n        }\n        case \"CLEAR\" : {\n            state = {...state, error:\"\"}\n            break\n        }\n\n        case \"CREATE_ARENA_SUCCESS\" : {\n            state = {...state, error : \"success\"}\n        }\n        case \"DIFFERENT_PASSWORDS\" : {\n            state = {...state, error: \"DIFFERENT_PASSWORDS\"}\n            break;\n        }\n        case \"INVALID_LOGIN\" : {\n            state = {...state, error: \"INVALID_LOGIN\"}\n            break;\n        }\n       \n    }\n    return state;\n}\n\nexport default errors;","const arenaReducer = (state={allArenas : []}, action) => {\n    switch(action.type) {\n        \n        case \"ALL_ARENA_LIST\" : {\n            state = {...state, allArenas : action.payload.allArenas}\n        }\n\n    }\n    return state;\n};\n\nexport default arenaReducer;","const eventReducer = (state={allEvents : [], myEvents : []}, action) => {\n    switch(action.type) {\n        case \"ATTEMPT_CREATE_EVENT\" : {\n            state = {...state, username: action.payload.username, firstname: action.payload.firstname, lastname: action.payload.lastname, password: action.payload.password, key : action.payload.key, usertype:action.payload.usertype}\n            break;\n        }\n        case \"ALL_EVENT_LIST\" : {\n            state = {...state, allEvents : action.payload.allEvents}\n            break;\n        } \n        case \"MY_EVENT_LIST\" : {\n            state = {...state, myEvents : action.payload.myEvents}\n            break;\n        }\n        case \"LOGIN\" : {\n            state = {...state, myEvents : []}\n            break;\n        }\n    }\n    return state;\n};\n\nexport default eventReducer;","const securityReducer = (state={allSecurity : []}, action) => {\n    switch(action.type) {\n        \n        case \"ALL_SECURITY_LIST\" : {\n            state = {...state, allSecurity : action.payload.allSecurity}\n        }\n\n    }\n    return state;\n};\n\nexport default securityReducer;","const athleteReducer = (state={allAthletes : []}, action) => {\n    switch(action.type) {\n        \n        case \"ALL_ATHLETE_LIST\" : {\n            state = {...state, allAthletes : action.payload.allAthletes}\n        }\n\n    }\n    return state;\n};\n\nexport default athleteReducer;","const internalReducer = (state={createAccountOptions:\"\",searchEvent:\"\", searchAthlete:\"\", selectArena :\"\", selectSex:\"\", selectInches:\"\", selectFeet:\"s\"}, action) => {\n    switch(action.type) {\n        \n        case \"SELECT_CREATE_USER\" : {\n            state = {...state, createAccountOptions : action.payload.selection}\n            break\n        }\n\n        case \"SELECT_ARENA\" : {\n            state = {...state, selectArena : action.payload.selection}\n            break\n        }\n\n        case \"SEARCH_ATHLETE\" : {\n            state = {...state, searchAthlete : action.payload.selection}\n            break\n        }\n\n\n        case \"SEARCH_EVENT\" : {\n            state = {...state, searchEvent : action.payload.selection}\n            break\n        }\n\n        case \"SELECT_SEX\" : {\n            state = {...state, selectSex : action.payload.selection}\n            break\n        }\n        case \"SELECT_INCHES\" : {\n            state = {...state, selectInches : action.payload.selection}\n            break\n        } \n        case \"SELECT_FEET\" : {\n            state = {...state, selectFeet : action.payload.selection}\n        }\n\n    }\n    return state;\n};\n\nexport default internalReducer;","import {combineReducers } from \"redux\"\n\nimport user from \"./userReducer\"\nimport redirect from \"./redirects\"\nimport errors from \"./errors\"\nimport arena from \"./arenaReducer\"\nimport event from \"./eventReducer\"\nimport security from \"./securityReducer\"\nimport athlete from \"./athleteReducer\"\nimport internal from \"./internalReducer\"\n\nexport default combineReducers( {\n    user,\n    redirect,\n    errors,\n    arena,\n    event,\n    athlete,\n    security,\n    internal\n})","import {applyMiddleware, createStore } from \"redux\"\n\nimport logger from \"redux-logger\"\nimport thunk from \"redux-thunk\"\nimport promise from \"redux-promise-middleware\"\n\nimport reducer from \"./reducers\"\n\nexport default createStore(reducer, applyMiddleware(promise, thunk, logger))","import store from \"../store\";\n\nexport function redirect(page) {\n    store.dispatch({type:page , payload:{}})\n}","import store from \"../store\";\nimport { redirect } from \"./redirectActions\";\nimport Dashboard from \"../Dashboard\";\n\nexport function attemptCreateEvent(name, duration, outdoors, aquatic, track, field) {\n\n    console.log(name + \" \"  +  \" \" + duration +  outdoors+ \" \" +aquatic+ \" \" + track + \" \" + field)\n\n    fetch('https://olympiabackend.appspot.com/event/taken', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            name : name\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            if(responseJson.Available == true) {\n            fetch('https://olympiabackend.appspot.com/event/new', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    name : String(name),\n                    duration : Number(duration),\n                    track : String(track), \n                    aquatic : String(aquatic),\n                    outdoors : String(outdoors),\n                    field : String(field)\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n\n                    console.log(\"777    \" + responseJson.Capacity);\n                    console.log(\"event successfully created!\")\n                \n\n\n                    if(responseJson.Name != \"\") {\n                     getAllEvents()   \n                    }\n\n                return \n                }).catch((error) => {\n                    //if event params are empty?\n                });\n            } else {\n                    //if event name is already taken.\n            store.dispatch({type:\"EVENT_TAKEN\", payload:{}})\n            }\n        }).catch((error) => {\n            console.log(\"hhh    \" + error);\n        });\n}\n\n\nexport function getAllEvents() {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/event/all', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    console.log(\"WE DID IT!! \" )\n\n                    x = responseJson.AllEvents\n\n\n            store.dispatch({type:\"ALL_EVENT_LIST\", payload:{allEvents : x}})\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n\nexport function getMyEvents(user) {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/event/mine', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    username : user\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    console.log( responseJson.Registered)\n\n                    x = responseJson.Registered\n\n\n            store.dispatch({type:\"MY_EVENT_LIST\", payload:{myEvents : x}})\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n\n\nexport function schedule(event, day, start, duration) {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/event/schedule/open', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    event: event,\n                    day: Number(day),\n                    start: Number(start),\n                    duration: Number(duration)\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n\n                    if(responseJson.CanSchedule) {\n\n\n                        fetch('https://olympiabackend.appspot.com/event/schedule', {\n                            method: 'POST',\n                            headers: {\n                            'Accept': 'application/json',\n                            },\n                            body: JSON.stringify({\n                                event: event,\n                                day: Number(day),\n                                start: Number(start),\n                                duration: Number(duration)\n                            }),\n                            }).then((response) => response.json()).then((responseJson) => {\n            \n            \n                            }).catch((error) => {\n                                //if event params are empty?\n                            })\n\n\n\n                    }\n\n                    getAllEvents()\n                    console.log(responseJson)\n                    x = responseJson.AllEvents\n\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n\n\nexport function eventPair(e, a) {\n    fetch('https://olympiabackend.appspot.com/event/pair', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            event: e,\n            arena: a\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n        \n            \n        }).catch((error) => {\n            console.log(\"XXX\" + error)\n            //if event params are empty?\n        })\n\n}\n\nexport function eventStaffPrice(e, a) {\n    console.log(e + \"   \" + a)\n    fetch('https://olympiabackend.appspot.com/event/price/staff', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            event: e,\n            price: Number(a)\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            getAllEvents()\n            \n        }).catch((error) => {\n            console.log(\"XXX\" + error)\n            //if event params are empty?\n        })\n\n}\n\n\nexport function eventPublicPrice(e, a) {\n\n    fetch('https://olympiabackend.appspot.com/event/price/public', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            event: e,\n            price: Number(a)\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n        \n            getAllEvents()\n        }).catch((error) => {\n            //if event params are empty?\n        })\n\n}\n\nexport function buyTicket(e, user, count, free) {\n    console.log(e + \"  \" + user + \"  \" + count + \"  \" + free)\n    fetch('https://olympiabackend.appspot.com/event/ticket', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            event: e,\n            count: Number(count),\n            username : user,\n            free: free\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            getAllEvents()\n            getMyEvents(user)\n        }).catch((error) => {\n            //if event params are empty?\n        })\n\n}","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, buyTicket} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Navigation from './Navigation.js';\n\n    \nfunction weekday(num) {\n  switch(num % 7) {\n      case 0: return \"Sunday\"\n      case 1: return \"Monday\"\n      case 2: return \"Tuesday\"\n      case 3: return \"Wednesday\"\n      case 4: return \"Thursday\"\n      case 5: return \"Friday\"\n      case 6: return \"Saturday\"\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    user: state.user\n  };\n}\n\n\nlet id = 0;\nlet set = new Set();\n\nvar dict = []\nvar taffPrice = []\nvar publicPrice = []\nvar count = []\n\nfunction getData(name, arena, current, capacity, ticketPrice, staffPrice, day, start, duration) {\n  id += 1;\n\n  dict[name] = 0;\n  taffPrice[name] = staffPrice\n  publicPrice[name] = ticketPrice\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n\n  if(arena == null || arena.Name == \"\") {\n    return { id, name, arena : \"TBD\", current, capacity, ticketPrice, staffPrice, day, start, duration};\n  } else {\n    return { id, name, arena : arena.Name, current, capacity, ticketPrice, staffPrice, day, start, duration };\n  }\n }\n\n\nclass PurchaseTickets extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        event: \"\", \n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleStaffPriceChange = this.handleStaffPriceChange.bind(this);\n    this.handlePublicPriceChange = this.handlePublicPriceChange.bind(this);\n    this.buyPublicTickets = this.buyPublicTickets.bind(this)\n    this.buyStaffTickets = this.buyStaffTickets.bind(this)\n    this.buyAthleteTickets = this.buyAthleteTickets.bind(this)\n    \n    this.calcPrice = this.calcPrice.bind(this);\n    this.calcPrice2 = this.calcPrice2.bind(this);\n    this.setX = this.setX.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleArenaChange(event) {\n    eventPair(event.target.name, event.target.value)\n    getAllEvents()\n  }\n\n  handleStaffPriceChange(event) {\n    eventStaffPrice(event.target.name, event.target.value)\n    \n    event.preventDefault();\n  }\n\n  handlePublicPriceChange(event) {\n    eventPublicPrice(event.target.name, event.target.value)\n  \n    event.preventDefault();\n  }\n\n  buyStaffTickets(count2, event) {\n    console.log(this.state.event)\n    var n = this.state.event;\n    buyTicket(n, this.props.user.username, count2, \"off\")\n\n    count[event.target.name] = 0\n    event.preventDefault();\n  }  \n\n  buyPublicTickets(count, event) {\n    console.log(this.state.event)\n    var n = this.state.event;\n    buyTicket(n, this.props.user.username, count, \"off\")\n\n    count[event.target.name] = 0\n    event.preventDefault();\n  }\n\n  setX(event) {\n  }\n\n  buyAthleteTickets(event) {\n    buyTicket(event.target.name, this.props.user.username, count[event.target.name], \"off\")\n\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n\n  calcPrice2(event) {\n    dict[event.target.name] = publicPrice[event.target.name] * event.target.value\n    count[event.target.name] = event.target.value\n    this.state.event = event.target.name\n    console.log(event.target.name + \" XXXX :) X  \" + event.target.value)\n\n \n      \n  var div = document.getElementById(event.target.name + \"x\");\n  div.innerHTML = \"\" + dict[event.target.name];\n  console.log(div)\n}\n\n  calcPrice(event) {\n      dict[event.target.name] = taffPrice[event.target.name] * event.target.value\n      count[event.target.name] = event.target.value\n      this.state.event = event.target.name\n      console.log(event.target.name + \" XXXX :) X  \" + event.target.value)\n  \n   \n        \n    var div = document.getElementById(event.target.name + \"x\");\n    div.innerHTML = \"\" + dict[event.target.name];\n    console.log(div)\n  }\n  \n\n  \n\n  render() {\n      var events = this.props.event.allEvents\n    \n      var buy = \"Buy\"\n\n      const paperStyles = {\n        padding: '20px',\n      };\n\n      if (events == null)\n      events = [] \n\n      var listItems = events.map((d) => getData(d.Name, d.Arena, d.TicketCount, d.ArenaCapacity, d.PublicPrice, d.StaffPrice, d.Day, d.StartTime, d.Duration)) //this r\n      \n      listItems = listItems.filter((d) => {\n        return !d.name.startsWith(\"(S) - \")\n      })\n   \n      if (this.props.user.usertype == \"public\") { //public stuff\n\n        const paperStyles = {\n          padding: '20px',\n        };\n\n        var t = (\n          <Paper style={paperStyles}>\n            <Table>\n              <TableHead id=\"TableHeadRow\">\n                <TableRow id=\"TableHeadRow\">\n                  <TableCell id=\"TableHeadCell\"\n                  >Event</TableCell>\n                  <TableCell \n                  id=\"TableHeadCell\"\n                  align=\"right\">Arena</TableCell>\n                  <TableCell \n                  id=\"TableHeadCell\"\n                  align=\"right\">Tickets Remaining</TableCell>\n      \n                  <TableCell id=\"TableHeadCell\"\n                  align=\"right\">Event Day</TableCell>\n                  <TableCell id=\"TableHeadCell\"\n                  align=\"right\">Event Start</TableCell>\n                  <TableCell id=\"TableHeadCell\"\n                  align=\"right\">Event Duration</TableCell>\n                  <TableCell \n                  id=\"TableHeadCell\"\n                  align=\"right\">(Public) Ticket Price</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {listItems.map(row => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.arena}</TableCell>\n                    \n                    <TableCell align=\"right\">{row.capacity - row.current}</TableCell>\n      \n                    <TableCell align=\"right\">{weekday(row.day)}</TableCell>\n                    <TableCell align=\"right\">{row.start}</TableCell>\n                    <TableCell align=\"right\">{row.duration}</TableCell>\n      \n                    \n                    <TableCell align=\"right\">$ {row.ticketPrice} x <Input type=\"number\" name={row.name}  onBlur={this.calcPrice2} align=\"center\" placeholder={\"\" + 0}  pattern=\"\\d+\" min=\"0\" ></Input> = <span id={ row.name + \"x\"}>{dict[row.name]}</span> </TableCell>\n                    <TableCell name={row.name} onClick={this.setX}><Button value={row.name} onClick={ e => this.buyPublicTickets(count[row.name], e)}  color=\"primary\" >{buy}</Button></TableCell>\n      \n                  \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        );\n      } else {\n\n  var t = (\n    <Paper style={paperStyles}>\n      <Table>\n        <TableHead id=\"TableHeadRow\">\n          <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\"\n            >Event</TableCell>\n            <TableCell \n            id=\"TableHeadCell\"\n            align=\"center\">Arena</TableCell>\n            <TableCell \n            id=\"TableHeadCell\"\n            align=\"center\">Tickets Remaining</TableCell>\n\n            <TableCell id=\"TableHeadCell\"\n            align=\"center\">Event Day</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"center\">Event Start</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"center\">Event Duration</TableCell>\n            <TableCell \n            id=\"TableHeadCell\"\n            align=\"center\">(Staff) Ticket Price</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listItems.map(row => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"center\">{row.arena}</TableCell>\n              \n              <TableCell align=\"center\">{row.capacity - row.current}</TableCell>\n\n              <TableCell align=\"center\">{weekday(row.day)}</TableCell>\n              <TableCell align=\"center\">{row.start}</TableCell>\n              <TableCell align=\"center\">{row.duration}</TableCell>\n\n              \n              <TableCell align=\"center\">$ {row.staffPrice} x <Input type=\"number\" name={row.name}  onBlur={this.calcPrice} align=\"center\" placeholder={\"\" + 0}  pattern=\"\\d+\" min=\"0\" ></Input> = <span id={ row.name + \"x\"}>{dict[row.name]}</span> </TableCell>\n              <TableCell name={row.name} onClick={this.setX}><Button value={row.name} onClick={e => this.buyStaffTickets(count[row.name], e)}  variant=\"contained\" color=\"primary\" >{\"Buy\"}</Button></TableCell>\n              \n\n            \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n       }\n\n      return (\n        <div >\n            <p id=\"TitleOverTable\">Tickets</p>\n        { t}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(PurchaseTickets)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Navigation from './Navigation.js';\n\n\nfunction weekday(num) {\n    switch(num % 7) {\n        case 0: return \"Sunday\"\n        case 1: return \"Monday\"\n        case 2: return \"Tuesday\"\n        case 3: return \"Wednesday\"\n        case 4: return \"Thursday\"\n        case 5: return \"Friday\"\n        case 6: return \"Saturday\"\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena\n  };\n}\n\n\nlet id = 0;\nlet set = new Set();\n\nfunction getData(name, arena, current, capacity, ticketPrice, staffPrice, day, start, duration) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n\n  if(arena == null || arena.Name == \"\") {\n    return { id, name, arena : \"Select Arena\", current, capacity, ticketPrice, staffPrice, day, start, duration, arenaLabel : \"\" + id };\n  } else {\n    return { id, name, arena : arena.Name, current, capacity, ticketPrice, staffPrice, duration, day, start, duration, arenaLabel : \"\" + id };\n  }\n }\n\n\nclass MyEvents extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.durations = []\n    this.startTimes = []\n    this.days = []\n    this.allEvents = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange(event) {\n\n    \n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n\n  render() {\n      var events = this.props.event.allEvents.map((d) => getData(d.Name, d.Arena, d.TicketCount, d.ArenaCapacity, d.PublicPrice, d.StaffPrice, d.Day, d.StartTime, d.Duration)) \n      var myEvents = this.props.event.myEvents\n      var eventMap = []\n\n      var keys = Object.keys(myEvents)\n\n      keys.map((k) => console.log(\"X \" + k))\n      keys = keys.filter(function (k) {\n        return myEvents[k] > 0\n      });\n      \n      events.map((d) => eventMap[d.name] = d)\n\n      console.log(eventMap)\n      \n      //need to sort everything. will do that later.\n      var listItems = events\n\n      const paperStyles = {\n        padding: '20px',\n      };   \n\n  var t = (\n    <Paper style={paperStyles}>\n      <Table>\n        <TableHead id=\"TableHeadRow\">\n          <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\">Event</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"right\">Arena</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"right\">Day</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"right\">Event Start</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"right\">Event Duration</TableCell>\n            <TableCell id=\"TableHeadCell\"\n            align=\"right\">Tickets Bought</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {keys.map(k => (\n            <TableRow key={k}>\n              <TableCell component=\"th\" scope=\"row\">\n                {k}\n              </TableCell>\n              <TableCell align=\"center\">{eventMap[k].arena}     \n            </TableCell>\n           \n            <TableCell align=\"center\">{weekday(eventMap[k].day)}</TableCell>\n            <TableCell align=\"center\">{eventMap[k].start}</TableCell>\n            <TableCell align=\"center\">{eventMap[k].duration}</TableCell>\n            <TableCell align=\"center\">{myEvents[k]}</TableCell>\n                 \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">Your current schedule</p>\n        { t}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(MyEvents)","import store from \"../store\";\nimport { redirect } from \"./redirectActions\";\nimport Dashboard from \"../Dashboard\";\nimport { getAllEvents } from \"./eventActions\";\n\nexport function updateSecurity(event, needed) {\n    fetch('https://olympiabackend.appspot.com/security/update', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            event: event,\n            needed : Number(needed)\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            getAllSecurity()\n            getAllEvents()\n            \n        }).catch((error) => {\n            getAllSecurity()\n            getAllEvents()\n        })\n\n        \n}\n\n\nexport function getAllSecurity() {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/security/all', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    x = responseJson\n                    console.log(x)\n\n\n            store.dispatch({type:\"ALL_SECURITY_LIST\", payload:{allSecurity : x}})\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n\nexport function getMyShifts(user) {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/event/mine', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    username : user\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    console.log( responseJson.Registered)\n\n                    x = responseJson.Registered\n\n\n            store.dispatch({type:\"MY_EVENT_LIST\", payload:{myEvents : x}})\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    security : state.security\n  };\n}\n\n\nlet id = 0;\nlet set = new Set();\n\n\nfunction overview(first, last, username, shift) {\n    return {first, last, username, shift}\n}\n\nfunction getData(name, arena, current, capacity, ticketPrice, staffPrice, day, start, duration, currentGuards, needed) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n \n\n  if(arena == null || arena.Name == \"\") {\n    return { id, name, arena : \"Select Arena\", current, capacity, ticketPrice, staffPrice, day, start, duration, arenaLabel : \"\" + id, needed , currentGuards};\n  } else {\n    return { id, name, arena : arena.Name, current, capacity, ticketPrice, staffPrice, duration, day, start, duration, arenaLabel : \"\" + id, needed , currentGuards};\n  }\n }\n\n\nclass GruntPage extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleNeededChange = this.handleNeededChange.bind(this);\n    this.updateGuards = this.updateGuards.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleNeededChange( event) {\n      console.log(event.target.name)\n      if (event.target.value != null)\n        this.needed[event.target.name] = event.target.value\n  }\n\n\n  updateGuards(eventName,needed, event) {\n\n        if(!(eventName in this.needed)) {\n            updateSecurity(eventName, needed)\n        } else\n            updateSecurity(eventName, this.needed[eventName])\n  }\n\n\n  render() {\n      var events = this.props.event.allEvents\n\n      //need to sort everything. will do that later.\n      var listItems = events.map((d) => getData(d.Name, d.Arena, d.TicketCount, d.ArenaCapacity, d.PublicPrice, d.StaffPrice, d.Day, d.StartTime, d.Duration, d.CurrentSecurity, d.SecurityNeeded)) //this render needs to be completed\n\n\n      listItems = listItems.filter((d) => {\n        return !d.name.startsWith(\"(S) - \")\n      })\n\n  var t = (\n    <Paper style={paperStyles}>\n      <Table>\n        <TableHead id=\"TableHeadRow\">\n          <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\" align=\"right\">Event</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Arena</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Registration Count</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Event Capacity</TableCell>\n\n            <TableCell id=\"TableHeadCell\" align=\"right\">Current Security</TableCell>\n            <TableCell id=\"TableHeadCell\"  align=\"right\">Preferred Count</TableCell>\n\n            <TableCell id=\"TableHeadCell\"  align=\"right\">Get Security</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listItems.map(row =>\n              (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"center\">\n             {row.arena}\n            </TableCell>\n              <TableCell align=\"center\">{row.current}</TableCell>\n              <TableCell align=\"center\">{row.capacity}</TableCell>\n              <TableCell align=\"center\">{row.currentGuards}</TableCell>\n\n            <TableCell align=\"center\"><Input onChange={ this.handleNeededChange} name={row.name} placeholder={\"\"+ row.needed}></Input></TableCell>\n              <TableCell align=\"center\"><Button color=\"primary\" onClick={(e) => this.updateGuards(row.name, row.needed, e)}>Update</Button></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n\n  let guards = this.props.security.allSecurity.map((s) => overview(s.First, s.Last, s.Username, s.Shifts))\n\n\n  const paperStyles = {\n    padding: '20px',\n  };\n\n  var guardSchedules = (\n    <Paper style={paperStyles}>\n      <Table>\n        <TableHead id=\"TableHeadRow\">\n          <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\" align=\"center\">Username</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">First Name</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Last Name</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Shifts</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {guards.map(row =>\n              (\n            <TableRow key={row.username}>\n           \n           <TableCell align=\"center\">{row.username}</TableCell>\n            <TableCell align=\"center\">{row.first}</TableCell>\n            <TableCell align=\"center\">{row.last}</TableCell>\n            <TableCell align=\"center\">{row.shift}</TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">Schedule Security</p>\n            { t}\n            \n            <br/>\n            <br/>\n            <br/>\n            <p id=\"TitleOverTable\">Security Guards</p>\n            {guardSchedules}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(GruntPage)","import store from \"../store\";\nimport { redirect } from \"./redirectActions\";\nimport Dashboard from \"../Dashboard\";\nimport { getAllEvents } from \"./eventActions\";\n\nexport function updateBio(athlete, height, weight, sex, bio, age, country) {\n    console.log(athlete + \" \" + height + \" \" + weight + \" \" + sex + \" \" + bio + \" \" + age + \" \" + country )\n\n    if (height == 0) {\n        height = -1;\n    }\n\n    if (weight == 0 ) {\n        weight = -1;\n    }\n\n    if (sex == \"Sex\") {\n        sex = \"\"\n    }\n\n    if (bio == \"Bio\") {\n        bio = \"\"\n    }\n\n    if (age == 0) {\n        age = -1\n    }\n\n    if (country == \"Country\") {\n        country = \"\"\n    }\n    console.log(\"AGE : \" + age)\n\n    fetch('https://olympiabackend.appspot.com/athlete/bio', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            username : athlete,\n            height : Number(height),\n            weight : Number(weight),\n            sex : sex,\n            bio : bio,\n            age: Number(age),\n            country : country\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            getAllAthletes()\n            \n        }).catch((error) => {\n            getAllAthletes()\n        })\n\n        \n}\n\n\nexport function getAllAthletes() {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/athlete/all', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    x = responseJson.AllAthletes\n                  \n\n            store.dispatch({type:\"ALL_ATHLETE_LIST\", payload:{allAthletes : x}})\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n\nexport function athleteToggleEvent(username2, toggle, event) {\n    console.log(username2 + \"  \" + toggle + \"  \" + event)\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/athlete/schedule', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    username : \"\" + username2,\n                    toggle: \"\" + toggle,\n                    event : \"\" + event\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    getAllAthletes()\n\n                }).catch((error) => {\n                    //if event params are empty?\n                    console.log(error)\n                })\n\n}\n\n\n\nexport function athleteScheduleSigning(arena, user, day, start, duration) {\n    var x = \"\"\n\n    console.log(user + \"     DD \")\n            fetch('https://olympiabackend.appspot.com/athlete/signing/open', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    event: \"\",\n                    day: Number(day),\n                    start: Number(start),\n                    duration: Number(duration),\n                    arena: arena,\n                    username: user\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n\n                    if(responseJson.CanSchedule) {\n\n                        fetch('https://olympiabackend.appspot.com/athlete/signing', {\n                            method: 'POST',\n                            headers: {\n                            'Accept': 'application/json',\n                            },\n                            body: JSON.stringify({\n                                arena: arena,\n                                username: user,\n                                day: Number(day),\n                                start: Number(start),\n                                duration: Number(duration),\n                                event : \"\"\n                            }),\n                            }).then((response) => response.json()).then((responseJson) => {\n            \n            \n                                getAllAthletes()\n                                getAllEvents()\n                            }).catch((error) => {\n                                //if event params are empty?\n                            })\n\n\n\n                    }\n                    console.log(responseJson)\n                    x = responseJson.AllEvents\n\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}\n\n\nexport function athleteSigningDrop(user, event) {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/athlete/signing/drop', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    event : \"\" + event,\n                    username: \"\" + user\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    getAllAthletes()\n\n                    getAllEvents()\n\n                }).catch((error) => {\n                    //if event params are empty?\n                    console.log(error)\n                    getAllAthletes()\n\n                    getAllEvents()\n\n                })\n\n}\n","import store from \"../store\";\n\nexport function setOption(page, choice) {\n    store.dispatch({type:page , payload:{selection : choice}})\n}","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptLogin, logout} from './actions/userActions'\nimport {updateBio} from './actions/athleteActions'\nimport store from './store';\nimport {redirect} from './actions/redirectActions';\n\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { getAllAthletes } from './actions/athleteActions';\nimport { setOption } from './actions/internalActions';\n\nimport { getAllEvents, getMyEvents } from './actions/eventActions';\nimport { getAllSecurity } from './actions/securityActions';\n\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    athlete: state.athlete,\n    internal : state.internal\n\n  };\n}\n\nlet name = \"Name\"\nlet sex = \"Sex\"\nlet age = 0\nlet heightMap = { \"feet\": 0, \"inches\": 0}\nlet height = 0\nlet weight = 0\nlet bio = \"Bio\"\nlet username = \"\"\nvar country = \"Country\"\n\nlet myBio = {}\n\nfunction myProfile(e, x) {\n  if (e.Username == x) {\n    myBio = e\n  }\n}\n\n\nclass AthleteBio extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: ''\n      };\n\n      this.handleName = this.handleName.bind(this)\n      this.handleSex = this.handleSex.bind(this)\n      this.handleAge = this.handleAge.bind(this)\n      this.handleHeight = this.handleHeight.bind(this)\n      this.handleWeight = this.handleWeight.bind(this)\n      this.handleBio = this.handleBio.bind(this)\n      this.handleCountry = this.handleCountry.bind(this)\n    \n  }\n\n  handleName(event) {\n    name = event.target.value\n  }\n\n  handleSex(event) {\n    //  this.setState({[event.target.name]: event.target.value});\n //   sex = event.target.value;\n    setOption(\"SELECT_SEX\", event.target.value)\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleAge(event) {\n    age = event.target.value\n  }\n\n  handleHeight(type, event) {\n  //  this.setState({[event.target.name]: event.target.value});\n  // to-do kirk height style conversion 10* ft, + inches for api\n\n    if (type == \"FEET\") {\n      heightMap.feet = Number(event.target.value)\n      setOption(\"SELECT_FEET\", event.target.value)\n      this.setState({[event.target.name]: event.target.value});\n    }\n    else if (type == \"INCHES\") {\n      setOption(\"SELECT_INCHES\", event.target.value)\n      this.setState({[event.target.name]: event.target.value});\n      heightMap.inches = Number(event.target.value)\n    }\n\n  height = (heightMap.feet*100) + heightMap.inches\n  }\n\n  handleWeight(event) {\n    //  this.setState({[event.target.name]: event.target.value});\n    weight = Number(event.target.value);\n    }\n\n\n  handleCountry(event)  {\n    country = event.target.value\n    console.log(country)\n  }\n\n  handleBio(event)  {\n    bio = event.target.value\n    \n  }\n\n    handleSubmit(event) {\n   \n   \n      \n    updateBio(username, height, weight, sex, bio, age, country)\n    getAllAthletes()\n    }\n\n    \n\n  handleChange(event) {\n   \n  }\n\n\n\n  createUser() {\n    redirect(\"CREATE_USER\")\n  }\n\n  render() {\n    username = this.props.user.username\n    \n    var s = this.props.athlete.allAthletes\n\n    let sexOption = this.props.internal.selectSex\n    let feetOption = this.props.internal.selectFeet\n    let inchesOption = this.props.internal.selectInches\n\n    if (sexOption == null ) {\n      sexOption = \"Type\"\n    }\n    if (feetOption == null ) {\n      feetOption = \"0\"\n    }\n    if (inchesOption == null ) {\n      inchesOption = \"0\"\n    }\n    \n\n    let bio = {}\n\n    for(var i = 0; i < s.length; i++) {\n      if (s[i].Username == this.props.user.username) {\n        bio = s[i]\n        break;\n      }\n    }\n\n    if (bio.sex == \"\") {\n      bio.sex = \"Sex\"\n    }\n\n    if(bio.weight == null) {\n      bio.weight = \"lbs\"\n    }\n\n\n    if(bio.feet == null) {\n      bio.feet = \"ft\"\n    }\n\n\n    if(bio.inches == null) {\n      bio.inches = \"in\"\n    }\n\n    return (\n      <div className=\"athlete-bio\">\n      <Paper elevation={1}>\n      <form className=\"athlete-bio__form\">\n    <p>{bio.First + \"'s Bio!\"}</p>\n    <p>Sex:  \n      <Select\n    // to-do default value and displaying selection\n        name=\"Sex\"\n        value={sexOption}\n        onChange={this.handleSex}\n        placeholder={\"Sex\"}>\n          <MenuItem value=\"Male\">Male</MenuItem>\n          <MenuItem value=\"Female\">Female</MenuItem>\n        </Select>\n\n    </p>\n    <p>Age: <Input type=\"text\" placeholder={\"\" + bio.Age} name=\"age\" onChange={this.handleAge}></Input></p>\n    <p>Ft: <Select\n    // to-do default value and displaying selection\n        name=\"Feet\"\n        value= {feetOption}\n        onChange={(e) => this.handleHeight(\"FEET\", e)}\n        placeholder={\"0\"}>\n          <MenuItem value=\"4\">4</MenuItem>\n          <MenuItem value=\"5\">5</MenuItem>\n          <MenuItem value=\"6\">6</MenuItem>\n          <MenuItem value=\"7\">7</MenuItem>\n        </Select>\n          In: <Select\n    // to-do default value and displaying selection\n        name=\"Inches\"\n        value= {inchesOption}\n        onChange={(e) => this.handleHeight(\"INCHES\", e)}\n        placeholder={\"0\"}>\n       \n          <MenuItem value=\"1\">1</MenuItem>\n          <MenuItem value=\"2\">2</MenuItem>\n          <MenuItem value=\"3\">3</MenuItem>\n          <MenuItem value=\"4\">4</MenuItem>\n          <MenuItem value=\"5\">5</MenuItem>\n          <MenuItem value=\"6\">6</MenuItem>\n          <MenuItem value=\"7\">7</MenuItem>\n          <MenuItem value=\"8\">8</MenuItem>\n          <MenuItem value=\"9\">9</MenuItem>\n          <MenuItem value=\"10\">10</MenuItem>\n          <MenuItem value=\"11\">11</MenuItem>\n\n\n        </Select>\n\n    </p>\n    <p>Weight: <Input type=\"number\" placeholder={\"\"+bio.Weight} name=\"weight\" onChange={this.handleWeight}></Input></p>\n    <p>Bio: <Input type=\"text\" placeholder={\"\"+bio.Bio} name=\"bio\" onChange={this.handleBio}></Input></p>\n\n    <p>Country: <Input type=\"text\" placeholder={\"\"+bio.Country} name=\"country\" onChange={this.handleCountry}></Input></p>\n  \n    <br/>\n      <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n      <br/>\n      </form>\n      </Paper>\n    </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(AthleteBio)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    security : state.security,\n    user: state.user\n  };\n}\n\n\nlet id = 0;\nlet set = new Set();\n\nfunction getData(name, arena, day, start, duration) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n\n  if (arena == null ) {\n    arena = \"TBD\"\n  } else {\n    arena = arena.Name\n  }\n\n  return { id, name, arena ,  day, start, duration};\n\n }\n\n\nclass GruntPage extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleNeededChange = this.handleNeededChange.bind(this);\n    this.updateGuards = this.updateGuards.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleNeededChange( event) {\n      console.log(event.target.name)\n      if (event.target.value != null)\n        this.needed[event.target.name] = event.target.value\n  }\n\n\n  updateGuards(eventName,needed, event) {\n\n        if(!(eventName in this.needed)) {\n            updateSecurity(eventName, needed)\n        } else\n            updateSecurity(eventName, this.needed[eventName])\n  }\n\n\n  render() {\n      var events = this.props.event.allEvents\n\n      //filter for shifts matching the actual user\n      events = events.filter((e) => {\n        console.log(e)\n        let guards = e.CurrentGuards\n\n        if (guards == null)\n          guards = []\n\n        for(var i = 0; i < guards.length; i++ ) {\n            if(guards[i].Username == this.props.user.username) {\n                return true\n            }\n        }\n        return false\n      })\n\n      events = events.map(d =>getData(d.Name, d.Arena, d.Day, d.StartTime, d.Duration)) //this render needs to be completed)\n\n      events = events.filter(d => {\n        return !d.name.startsWith(\"(S) - \")\n      })\n      \n      const paperStyles = {\n        padding: '20px',\n      };  \n\n  var guardSchedules = (\n    <Paper style={paperStyles}>\n      <Table>\n        <TableHead id=\"TableHeadRow\">\n          <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\" align=\"center\">Shift ID</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Event</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Arena</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Day</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Start</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"center\">Duration</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {events.map(row =>\n              (\n            <TableRow key={row.id}>\n           \n           <TableCell align=\"center\">{row.id}</TableCell>\n           <TableCell align=\"center\">{row.name}</TableCell>\n            <TableCell align=\"center\">{row.arena}</TableCell>\n            <TableCell align=\"center\">{row.day}</TableCell>\n            <TableCell align=\"center\">{row.start}</TableCell>\n            <TableCell align=\"center\">{row.duration}</TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">Scheduled Security Shifts</p>      \n           \n            <br/>\n\n            {guardSchedules}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(GruntPage)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\nimport { formatMs } from '@material-ui/core/styles/transitions';\nimport { athleteToggleEvent } from './actions/athleteActions';\nimport Navigation from './Navigation.js'\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    athlete : state.athlete,\n    user: state.user\n  };\n}\n\nlet username = \"\"\n\nlet id = 0;\n\nfunction getScheduleButton(user, flag, eventName) {\n  var text = \"\"\n  var bColor = \"\"\n\n  if (flag) {\n    text = \"Commit\"\n    flag = \"on\"\n    bColor = \"primary\"\n  }\n  else {\n    text = \"Dropout\"\n    flag = \"off\"\n    bColor = \"secondary\" // to do change button color\n  }\n  \n return ( <TableCell align=\"center\"><Button color={bColor} onClick={(e) => athleteToggleEvent(username, flag, eventName) } >{text}</Button></TableCell>)\n}\nfunction getData(name, arena,  day, start, duration,  flag) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n  if (arena == null ) {\n    arena = \"TBD\"\n  } else {\n    arena = arena.Name\n  }\n\n  return { id, name, arena ,  day, start, duration,  flag};\n }\n\n\nclass AthleteScheduler extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleNeededChange = this.handleNeededChange.bind(this);\n    this.updateGuards = this.updateGuards.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleNeededChange( event) {\n      console.log(event.target.name)\n      if (event.target.value != null)\n        this.needed[event.target.name] = event.target.value\n  }\n\n\n  updateGuards(eventName,needed, event) {\n\n        if(!(eventName in this.needed)) {\n            updateSecurity(eventName, needed)\n        } else\n            updateSecurity(eventName, this.needed[eventName])\n  }\n\n\n  render() {\n      username = this.props.user.username\n      var events = this.props.event.allEvents\n\n      //filter for shifts matching the actual user\n     /* events = events.filter((e) => {\n        let guards = e.CurrentGuards\n\n        for(var i = 0; i < guards.length; i++) {\n            if(guards[i].Username == this.props.user.username) {\n                return true\n            }\n        }\n        return false\n      })*/\n      var s = this.props.athlete.allAthletes\n\n      let bio = {}\n  \n      for(var i = 0; i < s.length; i++) {\n        if (s[i].Username == this.props.user.username) {\n          bio = s[i]\n          break;\n        }\n      }\n\n      var propValue;\nfor(var propName in bio) {\n    propValue = bio[propName]\n\n    if(propName == \"EventsParticipating\")\n    break;\n}\n\n\n    //  for(var e in bio)\n  //    console.log(bio['EventsParticipating'].Event)\n  if (propValue == null) {\n    propValue = []\n  }\n\n      events = events.map(d =>getData(d.Name, d.Arena, d.Day, d.StartTime, d.Duration, (propValue[d.Name] == null))) //this render needs to be completed)\n\n      events = events.filter(d => {\n        return !d.name.startsWith(\"(S) -\")\n      })\n      \n      const tableStyles = {\n        width: '80%',  \n        margin: 'auto',\n        borderRadius: '15px',\n        borderWidth: '5px',\n        borderStyle: 'solid',\n        bordercolor: 'rgb(58,85,174);',\n      };\n\n      const headerStyles = {\n        backgroundColor: 'blue',\n        color: 'white',\n      };\n      \n      const rowStyles = {\n        textColor: 'blue',\n      };\n\n      const paperStyles = {\n        padding: '20px',\n      };\n\n      var eventTable = (\n        <Paper style={paperStyles}>\n          <Table id=\"fixed-table\">\n            <TableHead id=\"TableHeadRow\">\n              <TableRow id=\"TableHeadRow\">\n                <TableCell \n                 id=\"TableHeadCell\"\n                 align=\"center\">Event</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Arena</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Day</TableCell>\n                <TableCell id=\"TableHeadCell\"\n                align=\"center\">Start</TableCell>\n                <TableCell id=\"TableHeadCell\"\n                align=\"center\">Duration</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Book</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n          \n            {events.map(row =>\n                  (\n                <TableRow key={row.id} color=\"#FAFAFA\">\n               \n               <TableCell align=\"center\">{row.name}</TableCell>\n                <TableCell align=\"center\">{row.arena}</TableCell>\n\n                <TableCell align=\"center\">{row.day}</TableCell>\n                <TableCell align=\"center\">{row.start}</TableCell>\n                <TableCell align=\"center\">{row.duration}</TableCell>\n                {getScheduleButton(username, row.flag, row.name)}\n                \n                </TableRow>\n              ))}\n\n\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">Sign up to compete!</p>\n            {eventTable}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(AthleteScheduler)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { redirect } from './actions/redirectActions';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { red } from '@material-ui/core/colors';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\n\n// redirects\nconst logout = () => {\n  redirect(\"LOGIN\")\n};\n\nconst redirectCompetition = () => {\n  redirect(\"ATHLETE_COMPETITION\")\n};\n\nconst redirectSigning = () => {\n  redirect(\"SCHEDULE_SIGNING\")\n};\n\nconst redirectBio = () => {\n  redirect(\"SET_BIO\")\n};\n\nconst redirectTickets = () => {\n  redirect(\"ATHLETE_PURCHASE\")\n};\n\nconst redirectEvents = () => {\n  redirect(\"MY_EVENTS\")\n};\n\nconst redirectNewArena = () => {\n  redirect(\"CREATE_ARENA\")\n};\nconst redirectNewEvent = () => {\n  redirect(\"CREATE_EVENT\")\n};\n\n\n\nconst redirectPurchaseTickets = () => {\n  redirect(\"PURCHASE\")\n};\nconst redirectSearches = () => {\n  redirect(\"SEARCH\")\n};\n\n\nfunction ButtonAppBar(props) {\n\n  const { classes } = props;\n  console.log(\"NAV BAR: \" + props.redirects)\n  var redirects = props.redirects\n\n  var user_type = props.type\n    switch(user_type) {\n        case \"public\" :\n            var navList = (\n            <div>  \n\n<Button color=\"inherit\" onClick={redirectPurchaseTickets}>Purchase Tickets</Button>\n<Button  color=\"inherit\" onClick={redirectSearches} >Lookup</Button>\n\n              </div>\n            )\n            break\n\n            case \"staff\" : \n            var navList = (\n              <div>  \n  \n  <Button  color=\"inherit\" onClick={redirectPurchaseTickets}>Purchase Tickets</Button>\n                          <Button  color=\"inherit\" onClick={redirectSearches} >Lookup</Button>\n  \n                </div>\n              )\n             break\n\n            case \"athlete\" : \n            var navList =(\n                    <div>      \n                        <Button  color=\"inherit\" onClick={redirectCompetition}>Compete</Button>\n                        <Button  color=\"inherit\" onClick={redirectBio} >Set Bio</Button>\n                        <Button  color=\"inherit\" onClick={redirectTickets} >Buy Tickets</Button>\n                    </div>\n            )\n\n            break\n                case \"admin\" : \n                var navList = (\n                    <div>\n                        <Button  color=\"inherit\" onClick={redirectNewArena}>Create Arena</Button>\n                        <Button  color=\"inherit\" onClick={redirectNewEvent} >Create Event</Button>\n                    </div>\n                )\n                break\n                case \"guard\" : \n                var navList = (\n                    <div>\n                    </div>\n                )\n                break\n                case \"officer\" : \n                var navList = (\n                    <div>\n                    </div>\n                )\n\n                break;\n      }\n  return (\n\n    \n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <p>{props.type.toUpperCase()}</p>\n            {navList}\n          </Typography>\n          <Button color=\"inherit\" onClick={logout}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\nimport { formatMs } from '@material-ui/core/styles/transitions';\nimport { athleteToggleEvent, athleteScheduleSigning, athleteSigningDrop } from './actions/athleteActions';\nimport Navigation from './Navigation.js';\n\nfunction icon(b) {\n    if (b == true) {\n        return \"O\"\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    athlete : state.athlete,\n    user: state.user\n  };\n}\n\nlet username = \"\"\n\nclass EventTable extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n  }\n\n\n  render() {\n      username = this.props.user.username\n      var events = this.props.event.allEvents\n\n      var arenas = this.props.arena.allArenas\n\n      events.map(d =>{\n        if(d.Arena == null) {\n          d.Arena = {Name : \"TBD\"}\n        }\n        if(d.Day == \"\"|| d.Start == 0 || d.Day == null) {\n          d.Day = \"TBD\"\n        }\n\n        if(d.Start == \"\" || d.Start == 0 || d.Start == null) {\n          d.Start = \"TBD\"\n        }\n\n        if(d.Duration == \"\" || d.Start == 0|| d.Duration == null) {\n          d.Duration = \"TBD\"\n        }\n\n\n  if (d.Name.startsWith(\"(S) - \"))\n  d.Name = d.Name.substring(5)\n\n\n      })\n    \n\n      const paperStyles = {\n        padding: '20px',\n      };  \n\n      var eventTable = (\n        <Paper style={paperStyles}>\n          <Table>\n            <TableHead id=\"TableHeadRow\">\n\n            <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\" align=\"center\">Event</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Arena</TableCell>\n\n                <TableCell id=\"TableHeadCell\" align=\"center\">Day</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Start</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Duration</TableCell>\n\n                <TableCell id=\"TableHeadCell\" align=\"center\">Capacity</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Outdoors</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Field</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Track</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Aquatic</TableCell>\n              </TableRow>\n              \n            </TableHead>\n            <TableBody>\n          \n            {events.map(row =>\n                  (\n                <TableRow key={row.id}>\n            \n\n            <TableCell align=\"center\">{row.Name}</TableCell>\n            <TableCell align=\"center\">{row.Arena.Name}</TableCell>\n\n            <TableCell align=\"center\">{\"\"+row.Day}</TableCell>\n                <TableCell align=\"center\">{\"\"+row.Start}</TableCell>\n                <TableCell align=\"center\">{\"\" + row.Duration}</TableCell>\n\n                <TableCell align=\"center\">{row.ArenaCapacity}</TableCell>\n                <TableCell align=\"center\">{icon(row.IsOutdoors)}</TableCell>\n                <TableCell align=\"center\">{icon(row.HasField)}</TableCell>\n                <TableCell align=\"center\">{icon(row.HasTrack)}</TableCell>\n                <TableCell align=\"center\">{icon(row.IsAquatic)}</TableCell>\n            </TableRow>\n              ))}\n\n\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">All Events</p>\n            {eventTable}\n        </div>\n      );\n  }\n}\n\nexport default connect(mapStateToProps)(EventTable)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\nimport { formatMs } from '@material-ui/core/styles/transitions';\nimport { athleteToggleEvent } from './actions/athleteActions';\nimport Navigation from './Navigation.js'\nimport { setOption } from './actions/internalActions';\nimport EventTable from './EventTable';\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    athlete : state.athlete,\n    user: state.user,\n    internal: state.internal\n  };\n}\n\nlet username = \"\"\n\nlet id = 0;\n\nfunction getScheduleButton(user, flag, eventName) {\n  var text = \"\"\n\n  if (flag) {\n    text = \"Commit\"\n    flag = \"on\"\n  }\n  else {\n    text = \"Dropout\"\n    flag = \"off\"\n  }\n  \n return ( <TableCell align=\"center\"><Button onClick={(e) => athleteToggleEvent(username, flag, eventName) } >{text}</Button></TableCell>)\n}\nfunction getData(name, arena,  day, start, duration,  flag) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n  if (arena == null ) {\n    arena = \"TBD\"\n  } else {\n    arena = arena.Name\n  }\n\n  return { id, name, arena ,  day, start, duration,  flag};\n \n }\n\nclass ViewEventData extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleNeededChange = this.handleNeededChange.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleNeededChange( event) {\n      console.log(event.target.name)\n      if (event.target.value != null)\n        this.needed[event.target.name] = event.target.value\n  }\n\n\n  render() {\n      username = this.props.user.username\n      var events = this.props.event.allEvents\n\n      //filter for shifts matching the actual user\n     /* events = events.filter((e) => {\n        let guards = e.CurrentGuards\n\n        for(var i = 0; i < guards.length; i++) {\n            if(guards[i].Username == this.props.user.username) {\n                return true\n            }\n        }\n        return false\n      })*/\n      var s = this.props.event.allEvents\n      var eventName = this.props.internal.searchEvent\n      let bio = null\n\n      if (eventName == null) {\n        eventName = \"\"\n      }\n  \n      if (s != null)\n      for(var i = 0; i < s.length; i++) {\n        console.log(s[i].Name + \" q \" + eventName)\n        if (s[i].Name.toLowerCase() == eventName.toLowerCase()) {\n          bio = s[i]\n          break;\n        }\n      }\n\n    var pv = []\n\n\n  var input = (\n    <div>\n      \n      <br/>\n      <p id=\"TitleOverTable\">Search Events</p>\n      <Input placeholder=\"Search Event (name)\" onBlur={e => {\n        setOption(\"SEARCH_EVENT\", e.target.value)\n      }}></Input>\n    </div>\n  )\n\n  if (bio == null) {\n    return (<div><EventTable/> {input}</div>)\n  }\n\nfor(var propName in bio) {\n  console.log(propName + \"  8\")\n    if(propName == \"Athletes\") {\n      pv= bio[propName]\n      break;\n    }\n}\n\n    //  for(var e in bio)\n  //    console.log(bio['EventsParticipating'].Event)\n  if (pv == null) {\n    pv = []\n  }\n\nvar t = []\n  for(var c in pv) {\n    if (pv[c].Country == \"\") {\n      pv[c].Country = \"Homeless\"\n    }\n    t.push(pv[c])\n  }\n  \n  events = t\n\n      var eventTable = (\n      \n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Username (LOOKUP)</TableCell>\n                <TableCell align=\"center\">First</TableCell>\n                <TableCell align=\"center\">Last</TableCell>\n                <TableCell align=\"center\">Country</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n          \n            {events.map(row =>\n                  (\n                <TableRow key={row.id}>\n               \n               <TableCell align=\"center\">{row.Username}</TableCell>\n               <TableCell align=\"center\">{row.First}</TableCell>\n                <TableCell align=\"center\">{row.Last}</TableCell>\n\n                <TableCell align=\"center\">{row.Country}</TableCell>\n                </TableRow>\n              ))}\n\n\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n\n\n      return (\n        <div>\n          <br/>\n          <EventTable/>\n          <br/>\n          <br/>\n          {input}\n\n          <br/>\n            <br/>\n\n            {eventTable}\n        </div>\n      );\n  }\n}\n\n\nexport default connect(mapStateToProps)(ViewEventData)","import store from \"../store\";\nimport { redirect } from \"./redirectActions\";\nimport Dashboard from \"../Dashboard\";\n\nexport function attemptCreateArena(name, cap, outdoors, aquatic, track, field) {\n\n    console.log(name + \" \" + cap +  \" \" + outdoors+ \" \" +aquatic+ \" \" + track + \" \" + field)\n\n    fetch('https://olympiabackend.appspot.com/arena/taken', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            name : name\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            if(responseJson.Available == true) {\n            fetch('https://olympiabackend.appspot.com/arena/new', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    name : String(name),\n                    cap : Number(cap),\n                    track : String(track), \n                    aquatic : String(aquatic),\n                    outdoors : String(outdoors),\n                    field : String(field)\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    getAllArenas()\n                return \n                }).catch((error) => {\n                    \n                });\n            } else {getAllArenas()\n            store.dispatch({type:\"USER_TAKEN\", payload:{}})\n            }\n        }).catch((error) => {getAllArenas()\n        });\n}\n\n\nexport function getAllArenas() {\n    var x = \"\"\n\n            fetch('https://olympiabackend.appspot.com/arena/all', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                    console.log(\"WE DID IT!! \" )\n\n                    x = responseJson.AllArenas\n\n\n            store.dispatch({type:\"ALL_ARENA_LIST\", payload:{allArenas : x}})\n                    \n                }).catch((error) => {\n                    console.log(\"XXX\" + error)\n                    //if event params are empty?\n                })\n\n}","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\nimport { formatMs } from '@material-ui/core/styles/transitions';\nimport { athleteToggleEvent, athleteScheduleSigning, athleteSigningDrop } from './actions/athleteActions';\nimport Navigation from './Navigation.js';\n\nfunction icon(b) {\n    if (b == true) {\n        return \"O\"\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    athlete : state.athlete,\n    user: state.user\n  };\n}\n\nlet username = \"\"\n\nclass ArenaTable extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n  }\n\n\n  render() {\n      username = this.props.user.username\n      var events = this.props.event.allEvents\n\n      var arenas = this.props.arena.allArenas\n\n      const paperStyles = {\n        padding: '20px',\n      };  \n\n      var eventTable = (\n        <Paper style={paperStyles}>\n          <Table>\n            <TableHead id=\"TableHeadRow\">\n\n            <TableRow id=\"TableHeadRow\">\n                <TableCell id=\"TableHeadCell\" align=\"center\">Arena</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Capacity</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Outdoors</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Field</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Track</TableCell>\n                <TableCell id=\"TableHeadCell\" align=\"center\">Aquatic</TableCell>\n              </TableRow>\n              \n            </TableHead>\n            <TableBody>\n          \n            {arenas.map(row =>\n                  (\n                <TableRow key={row.id}>\n            \n            <TableCell align=\"center\">{row.Name}</TableCell>\n                <TableCell align=\"center\">{row.Capacity}</TableCell>\n                <TableCell align=\"center\">{icon(row.IsOutdoors)}</TableCell>\n                <TableCell align=\"center\">{icon(row.HasField)}</TableCell>\n                <TableCell align=\"center\">{icon(row.HasTrack)}</TableCell>\n                <TableCell align=\"center\">{icon(row.IsAquatic)}</TableCell>\n                \n            </TableRow>\n                \n              ))}\n\n\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\"> All Arenas</p>      \n          \n            {eventTable}\n        </div>\n      );\n  }\n}\n\nexport default connect(mapStateToProps)(ArenaTable)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptCreateArena, getAllArenas} from './actions/arenaActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\nimport Navigation from './Navigation';\nimport ArenaTable from './ArenaTable.js'\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container, \n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors\n\n  };\n}\n\nclass NewArena extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        name : \"\",\n        capacity : 0,\n        outdoors : \"off\",\n        aquatic : \"off\",\n        track : \"off\",\n        field : \"off\"\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    attemptCreateArena(this.state.name, this.state.capacity, this.state.outdoors, this.state.aquatic, this.state.track, this.state.field)\n    getAllArenas()\n    event.preventDefault();\n  }\n\n  \n  render() {\n\n      if (this.props.errors.error == \"success\") {\n        var s = (<p>Arena Added!</p>)\n      }\n\n    return (\n        <div >\n            <ArenaTable></ArenaTable>\n            <br/><br/>\n            {s}\n         \n            <form className=\"create-arena-form\" >\n            <p class=\"center-text\">Create Arena</p>\n            <br></br>\n                <Input type=\"text\" name=\"name\" onChange={this.handleChange} placeholder=\"Arena name\"></Input><br /><br />\n                <Input type=\"number\" name=\"capacity\"  onChange={this.handleChange}  placeholder=\"Capacity\"></Input><br /><br />\n                <p id=\"CheckBoxInput\">IS OUTDOORS?<input type=\"checkbox\" name=\"outdoors\" id=\"CheckBoxInput\" onChange={this.handleChange}  placeholder=\"Is Outdoors?\"></input> </p> \n                <p>IS AQUATIC? <input type=\"checkbox\" name=\"aquatic\"  onChange={this.handleChange}  placeholder=\"Is Aquatic?\"></input></p>\n                <p>HAS TRACK?  <input type=\"checkbox\" name=\"track\"  onChange={this.handleChange}  placeholder=\"Has Track?\"></input></p>\n                <p>HAS FIELD?  <input type=\"checkbox\" name=\"field\"  onChange={this.handleChange}  placeholder=\"Has Field?\"></input> </p>\n                <br></br>\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\" name=\"submit\"  onClick={this.handleSubmit}  placeholder=\"Create Arena!\">Create Arena</Button>\n            </form>\n        </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(NewArena)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\nimport { formatMs } from '@material-ui/core/styles/transitions';\nimport { athleteToggleEvent } from './actions/athleteActions';\nimport Navigation from './Navigation.js'\nimport { setOption } from './actions/internalActions';\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    athlete : state.athlete,\n    user: state.user,\n    internal: state.internal\n  };\n}\n\nlet username = \"\"\n\nlet id = 0;\n\nfunction getScheduleButton(user, flag, eventName) {\n  var text = \"\"\n\n  if (flag) {\n    text = \"Commit\"\n    flag = \"on\"\n  }\n  else {\n    text = \"Dropout\"\n    flag = \"off\"\n  }\n  \n return ( <TableCell align=\"center\"><Button onClick={(e) => athleteToggleEvent(username, flag, eventName) } >{text}</Button></TableCell>)\n}\nfunction getData(name, arena,  day, start, duration,  flag) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n  if (arena == null ) {\n    arena = \"TBD\"\n  } else {\n    arena = arena.Name\n  }\n\n  if (name.startsWith(\"(S) - \"))\n    name = name.substring(5)\n\n  return { id, name, arena ,  day, start, duration,  flag};\n \n }\n\n\nclass ViewAthleteData extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleNeededChange = this.handleNeededChange.bind(this);\n    this.updateGuards = this.updateGuards.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleNeededChange( event) {\n      console.log(event.target.name)\n      if (event.target.value != null)\n        this.needed[event.target.name] = event.target.value\n  }\n\n\n  updateGuards(eventName,needed, event) {\n\n        if(!(eventName in this.needed)) {\n            updateSecurity(eventName, needed)\n        } else\n            updateSecurity(eventName, this.needed[eventName])\n  }\n\n\n  render() {\n      username = this.props.user.username\n      var events = this.props.event.allEvents\n\n      //filter for shifts matching the actual user\n     /* events = events.filter((e) => {\n        let guards = e.CurrentGuards\n\n        for(var i = 0; i < guards.length; i++) {\n            if(guards[i].Username == this.props.user.username) {\n                return true\n            }\n        }\n        return false\n      })*/\n      var s = this.props.athlete.allAthletes\n      var athleteName = this.props.internal.searchAthlete\n      let bio = null\n\n      if (athleteName == null) {\n        athleteName = \"\"\n      }\n  \n      for(var i = 0; i < s.length; i++) {\n        if (s[i].Username == athleteName) {\n          bio = s[i]\n          break;\n        }\n      }\n\n    var pv = []\n\n\n  var input = (\n    <div>\n       <p id=\"TitleOverTable\">Search Athletes</p>\n      <br></br>\n      <Input placeholder=\"Search Athlete (username)\" onBlur={e => {\n        console.log(e.target.value)\n\n\n        \n        setOption(\"SEARCH_ATHLETE\", e.target.value)\n      }}></Input>\n      <br/>\n    </div>\n  )\n\n  if (bio == null) {\n    return (<div>{input}</div>)\n  }\n\nfor(var propName in bio) {\n    if(propName == \"EventsParticipating\") {\n      pv= bio[propName]\n      break;\n    }\n}\n\n    //  for(var e in bio)\n  //    console.log(bio['EventsParticipating'].Event)\n  if (pv == null) {\n    pv = []\n  }\n\n  console.log(pv)  \nvar t = []\n  for(var c in pv) {\n    t.push(pv[c])\n  }\n\n  \n  var b = (\n      \n    <div>\n    <p>Athlete Bio</p>\n   <p>Name: {bio[\"First\"] + \" \" + bio[\"Last\"]}</p>\n   <p>Sex: {bio[\"Sex\"]} </p>\n   <p>Age: {bio[\"Age\"] + \" years old\"}</p>\n   <p>Height: {parseInt(bio[\"Height\"]/100) + \"' \" + bio[\"Height\"]%100 +\"\\\"\" } </p>\n   <p>Weight: {bio[\"Weight\"] + \" lbs\"}</p>\n   <p>Country of Origin: {bio[\"Country\"] }</p>\n   <p>Bio:{ bio[\"Bio\"]} </p>\n\n</div>\n  )\n  \n  events = t.map(d =>getData(d.Name, d.Arena, d.Day, d.StartTime, d.Duration, true)) //this render needs to be completed)\n    \n      var eventTable = (\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Event</TableCell>\n                <TableCell align=\"center\">Arena</TableCell>\n                <TableCell align=\"center\">Day</TableCell>\n                <TableCell align=\"center\">Start</TableCell>\n                <TableCell align=\"center\">Duration</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n          \n            {events.map(row =>\n                  (\n                <TableRow key={row.id}>\n               \n               <TableCell align=\"center\">{row.name}</TableCell>\n                <TableCell align=\"center\">{row.arena}</TableCell>\n\n                <TableCell align=\"center\">{row.day}</TableCell>\n                <TableCell align=\"center\">{row.start}</TableCell>\n                <TableCell align=\"center\">{row.duration}</TableCell>\n                </TableRow>\n              ))}\n\n\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n\n\n      return (\n        <div>\n          {input}\n\n          <br/>\n\n          {b}\n            <br/>\n\n            {eventTable}\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n        </div>\n      );\n  }\n}\n\n\nexport default connect(mapStateToProps)(ViewAthleteData)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptLogin, logout} from './actions/userActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport { getAllEvents } from './actions/eventActions';\nimport PurchaseTickets from './PurchaseTickets.js';\nimport MyEvents from './MyEvents.js';\nimport OfficerPage from './OfficerPage.js';\nimport AthleteBio from './AthleteBio.js';\nimport GruntPage from './GruntPage.js';\nimport AthleteScheduler from './AthleteScheduler.js';\nimport Navbar from './Navbar.js';\nimport ViewEventData from './ViewEventData.js'\n\nimport ViewAthleteBio from './ViewAthleteBio';\nimport NewArena from './NewArena';\nimport ViewAthleteData from './ViewAthleteData.js';\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: ''\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.redirectNewArena = this.redirectNewArena.bind(this);\n    this.redirectNewEvent = this.redirectNewEvent.bind(this);\n    this.redirectAutographs = this.redirectAutographs.bind(this);\n    this.redirectCompetition = this.redirectCompetition.bind(this);\n    this.redirectSetBio = this.redirectSetBio.bind(this);\n    this.redirectAthleteTickets = this.redirectAthleteTickets.bind(this);\n    this.redirectMyEvents = this.redirectMyEvents.bind(this)\n    this.logout = this.logout.bind(this);\n  }\n\n  logout(event) {\n    redirect(\"LOGIN\")\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    attemptLogin(this.state.username, this.state.password)\n    \n    event.preventDefault();\n  }\n\n  redirectMyEvents() {\n    redirect(\"MY_EVENTS\")\n  }\n  redirectNewArena() {\n    redirect(\"CREATE_ARENA\");\n  }\n\n\n  redirectAthleteTickets() {\n    redirect(\"ATHLETE_PURCHASE\");\n  }\n\n\n  redirectSetBio() {\n    redirect(\"SET_BIO\");\n  }\n\n\n  redirectNewEvent() {\n\n    getAllEvents()\n    redirect(\"CREATE_EVENT\");\n  }\n\n\n  redirectAutographs() {\n    redirect(\"SCHEDULE_SIGNING\");\n  }\n\n  redirectCompetition() {\n    redirect(\"ATHLETE_COMPETITION\");\n  }\n\n  redirectViewBio() {\n    redirect(\"VIEW_BIO\")\n  } \n\n\n  render() {\n    //this needs to be formalized into an actual navigation bar\n    var user_type = this.props.user.usertype\n    switch(user_type) {\n        case \"public\" :\n            var s = (\n            <div>  \n                </div>\n            )\n            break\n\n            case \"staff\" : \n            var s = (\n                <div>\n                </div>\n            )\n             break\n\n            case \"athlete\" : \n            this.redirectCompetition();\n            var s =(\n                    <div>\n                    </div>\n            )\n\nbreak\n                case \"admin\" : \n                this.redirectNewArena();\n                var s = (\n                    <div>\n                    </div>\n                )\n                break\n                case \"guard\" : \n                var s = (\n                    <div>\n                        <GruntPage></GruntPage>\n                    </div>\n                )\n                break\n                case \"officer\" : \n                var s = (\n                    <div>\n                        <OfficerPage></OfficerPage>\n                \n                    </div>\n                )\n\n                break;\n\n      }\n\n      return (\n        <div>\n\n        <Navbar type={user_type}></Navbar>\n        {s}\n        \n        </div>\n      )\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptLogin, logout} from './actions/userActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\nimport Navigation from './Navigation';\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: ''\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    attemptLogin(this.state.username, this.state.password)\n    \n    event.preventDefault();\n  }\n\n  logout(event) {\n    redirect(\"LOGIN\")\n  }\n\n  newUserForm() {\n    \n  }\n\n  render() {\n\n    return (\n      <div> </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","import store from \"../store\";\nimport { redirect } from \"./redirectActions\";\nimport Dashboard from \"../Dashboard\";\nimport { getAllEvents, getMyEvents } from \"./eventActions\";\n\nexport function attemptLogin(user, pass) {\n    fetch('https://olympiabackend.appspot.com/users/login', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            username: user,\n            password: pass\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            getMyEvents(user)\n            store.dispatch((dispatch) =>\n            {\n                dispatch({type:\"ATTEMPT_LOGIN\", payload:{username: user, key: responseJson.Key, firstname : responseJson.First, lastname : responseJson.Last, usertype: responseJson.UserType}})\n                dispatch({type: \"CLEAR\", payload:{}})\n            })  \n         if (responseJson.Key != 0 ) {\n            redirect(\"DASHBOARD\")\n            getMyEvents(user)\n         } else {\n            console.log(\"RFM, INVALID LOGIN\")\n            store.dispatch({type:\"INVALID_LOGIN\", payload:{}})\n            }\n        }).catch((error) => {\n        });\n}\n\nexport function createUser(first, last, user, pass, type) {\n    console.log(first + \" \" + last +  \" \" + user + \" \" +pass + \" \" + type)\n    fetch('https://olympiabackend.appspot.com/users/taken', {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n            username: user,\n        }),\n        }).then((response) => response.json()).then((responseJson) => {\n            console.log(\"   DDDD \" + responseJson.Available)\n            if(responseJson.Available == true) {\n             // store.dispatch({type:\"CREATE_USER\", payload:{username: user, key: responseJson.Key, firstname : first, lastname : last, userType: responseJson.UserType} })\n            fetch('https://olympiabackend.appspot.com/users/new', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                    firstname: first,\n                    lastname : last, \n                    usertype : type,\n                    username: user,\n                    password: pass\n                }),\n                }).then((response) => response.json()).then((responseJson) => {\n                \n                    getAllEvents()\n                    \n                store.dispatch((dispatch) =>\n                {\n                    dispatch({type:\"CREATE_USER\", payload:{username: user, key: responseJson.Key, firstname : first, lastname : last, usertype: responseJson.UserType}})\n                    dispatch({type: \"CLEAR\", payload:{}})\n                })\n                redirect(\"DASHBOARD\")\n                }).catch((error) => {\n                });\n            } else {\n\n            store.dispatch({type:\"USER_TAKEN\", payload:{}})\n            }\n        }).catch((error) => {\n\n        });\n}\n\nexport function logout() {\n    store.dispatch({type:\"LOGOUT\", payload:{}})\n}","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptLogin, logout} from './actions/userActions'\nimport store from './store';\nimport {redirect} from './actions/redirectActions';\n\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { withStyles} from '@material-ui/core/styles';\nimport { getAllArenas } from './actions/arenaActions';\n\nimport { getAllEvents, getMyEvents } from './actions/eventActions';\nimport { getAllSecurity } from './actions/securityActions';\nimport { getAllAthletes } from './actions/athleteActions';\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    errors: state.errors,\n  };\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    \n\n    this.state = {\n        username: '',\n        password: ''\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.createUser = this.createUser.bind(this);\n  }\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    store.dispatch({type: \"CLEAR\", payload:{}})\n    if (this.state.username.length > 0 && this.state.password.length > 0) {\n\n      console.log(\"attempt login\")\n      console.log(\"RFM These are errors, \" + this.props.errors.error)\n    getAllArenas()\n    getAllEvents()\n    getAllSecurity()\n    getAllAthletes()\n    attemptLogin(this.state.username.toLowerCase(), this.state.password)\n    \n    event.preventDefault();\n    }\n  }\n\n  logout(event) {\n    logout()\n  }\n\n  createUser() {\n    redirect(\"CREATE_USER\")\n  }\n  \n  render() {\n\n    if (this.props.errors.error == \"\") {\n\n      \n    }else if (this.props.errors.error == \"INVALID_LOGIN\") {\n      var e = (<p class=\"error-text\">Error! Invalid Login</p>)\n    }\n\n    return (\n\n      <div className=\"login-block\">\n      {e}\n        <form className = \"login-block__form\">\n        <br/> <br/>\n        <strong><p class=\"center-text\">Login</p></strong>\n      <Input type=\"text\" placeholder=\"username\"  name=\"username\" onChange ={this.handleChange}></Input>\n      <br></br>  \n      <Input type=\"password\" placeholder=\"password\" name=\"password\" onChange={this.handleChange}></Input>\n<br/><br></br>\n        <Button  variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} >Login</Button>\n        <br/> <br/> <br/>\n        <Button color=\"secondary\" variant=\"contained\" onClick={this.createUser} > New User? </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptLogin, createUser, logout} from './actions/userActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\nimport { Button, FormControl } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { setOption } from './actions/internalActions';\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors,\n    internal : state.internal\n  };\n}\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: ''\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.createUser = this.createUser.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSelectChange(event) {\n    setOption(\"SELECT_CREATE_USER\", event.target.value)\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    attemptLogin(this.state.username.toLowerCase(), this.state.password)\n  \n    event.preventDefault();\n  }\n\n  logout(event) {\n    logout()\n  }\n\n  createUser() {\n    console.log(this.state.password+  \": \" + this.state.confirm)\n    if (this.state.password != this.state.confirm) {\n      store.dispatch({type:\"DIFFERENT_PASSWORDS\", payload:{}})\n    } else {\n      createUser(this.state.firstname, this.state.lastname, this.state.username.toLowerCase(), this.state.password, this.state.usertype)\n    }\n  }\n\n  render() {\n    let option = this.props.internal.createAccountOptions\n\n    if (option == null ) {\n      option = \"Type\"\n    }\n\n    if (this.props.errors.error == \"\") {\n\n      \n    }else if (this.props.errors.error == \"USER_TAKEN\") {\n      var e = (<p class=\"error-text\">Error! That username is already in use!</p>)\n    } else if (this.props.errors.error == \"DIFFERENT_PASSWORDS\") {\n      var e = (<p class=\"error-text\">Error! passwords do not match</p>)\n    }\n    const s = (\n      <div className= \"create-user-block\">\n        {e}\n        <div className= \"create-user-block__form\">\n        <strong><p class=\"center-text \">Create user</p></strong>\n      <Input type=\"text\" placeholder=\"first name\" name=\"firstname\" onChange ={this.handleChange}></Input>\n      <br></br>\n      <Input type=\"text\" placeholder=\"last name\" name=\"lastname\" onChange ={this.handleChange}></Input>\n      <br></br>\n      <Input type=\"text\" placeholder=\"username\" name=\"username\" onChange ={this.handleChange}></Input>\n      <br></br>\n      <Input type=\"password\" placeholder=\"password\" name=\"password\" onChange ={this.handleChange}></Input>\n      <br></br>\n      <Input type=\"password\" placeholder=\"confirm password\" name=\"confirm\" onChange ={this.handleChange}></Input>\n      <br></br>\n      <p>Account Type: <br></br>\n        <FormControl>\n      <Select\n      onChange={ this.handleSelectChange}\n      name=\"usertype\"\n      placeholder=\"usertype\"\n      value={option}>\n          <MenuItem value=\"public\">Public</MenuItem>\n          <MenuItem value=\"athlete\">Athlete</MenuItem>\n          <MenuItem value=\"officer\">Officer</MenuItem>\n          <MenuItem value=\"staff\">Staff</MenuItem>\n          <MenuItem value=\"guard\">Guard</MenuItem>\n          <MenuItem value=\"admin\">Admin</MenuItem>\n        </Select>\n      </FormControl>  \n      </p>\n      <br></br> <br></br>\n      <Button color=\"secondary\" variant=\"contained\" onClick={this.createUser}>Create User</Button>\n      </div>\n      </div>\n    )\n\n    return s\n  }\n}\n\nexport default connect(mapStateToProps)(CreateUser)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena\n  };\n}\n\n\nlet id = 0;\nlet set = new Set();\n\nfunction getData(name, arena, current, capacity, ticketPrice, staffPrice, day, start, duration) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n  if(arena == null || arena.Name == \"\") {\n    return { id, name, arena : \"Select Arena\", current, capacity, ticketPrice, staffPrice, day, start, duration, arenaLabel : \"\" + id };\n  } else {\n    return { id, name, arena : arena.Name, current, capacity, ticketPrice, staffPrice, duration, day, start, duration, arenaLabel : \"\" + id };\n  }\n }\n\n\nclass AllEvents extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.durations = []\n    this.startTimes = []\n    this.days = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleStaffPriceChange = this.handleStaffPriceChange.bind(this);\n    this.handlePublicPriceChange = this.handlePublicPriceChange.bind(this);\n      \n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleStartChange = this.handleStartChange.bind(this);\n    this.handleDurationChange = this.handleDurationChange.bind(this);\n      \n    this.scheduleUpdate = this.scheduleUpdate.bind(this);\n  }\n\n  handleChange(event) {\n\n    \n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleArenaChange(event) {\n    eventPair(event.target.name, event.target.value)\n    getAllEvents()\n  }\n\n  handleStaffPriceChange(event) {\n\n    if(event.target.value > 0) {\n      var dollars = Math.round(Number(event.target.value) * 100) / 100\n      eventStaffPrice(event.target.name, dollars)\n   } \n    \n  }\n\n  handlePublicPriceChange(event) {\n    if(event.target.value > 0) {\n      var dollars = Math.round(Number(event.target.value) * 100) / 100\n      eventPublicPrice(event.target.name, dollars)\n    }\n  \n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleDurationChange(name, event) {\n    // console.log(event.target.value)\n\n     let mt = event.target.value\n\n     let at = parseInt(mt/100) * 60 + mt%100\n\n     //let dt = parseInt(duration/100) * 60 + duration%100\n\n     this.durations[name] = at\n     console.log(this.startTimes[name])\n\n    event.preventDefault();\n  }\n  \n  handleDayChange(name, event) {\n    // console.log(event.target.value)\n\n     //let dt = parseInt(duration/100) * 60 + duration%100\n\n     this.days[name] = event.target.value\n\n    event.preventDefault();\n  }\n\n  scheduleUpdate(name, day, start, duration, event) {\n\n    let d = this.days[name]\n\n    if (d == null || d == 0) \n    d = day;\n\n    \n    let s = this.startTimes[name]\n\n    if(s == null || s == 0)\n    s = parseInt(start/100) * 60 + start%100\n\n    let dur = this.durations[name]\n\n    if (dur == null || dur == 0)\n    dur = parseInt(duration/100) * 60 + duration%100\n\n\n    schedule(name, d, s, dur)\n\n\n  }\n  \n  handleStartChange(name, event) {\n    // console.log(event.target.value)\n\n     let mt = event.target.value\n\n     let at = parseInt(mt/100) * 60 + mt%100\n\n     //let dt = parseInt(duration/100) * 60 + duration%100\n\n     this.startTimes[name] = at\n     console.log(this.startTimes[name] + \"   \" + this.durations[name])\n\n    event.preventDefault();\n  }\n\n\n  render() {\n      var events = this.props.event.allEvents\n\n      var arenas = this.props.arena.allArenas\n\n      var arenaOptions = arenas.map((d) => (<MenuItem key={d.Name}  value={d.Name}>{d.Name}</MenuItem>))\n\n      //need to sort everything. will do that later.\n      var listItems = events.map((d) => getData(d.Name, d.Arena, d.TicketCount, d.ArenaCapacity, d.PublicPrice, d.StaffPrice, d.Day, d.StartTime, d.Duration)) //this render needs to be completed\n      listItems = listItems.filter(d => {\n        return !d.name.startsWith(\"(S) - \")\n      })\n  \n      const paperStyles = {\n        padding: '20px',\n      };\n\n  var t = (\n    <Paper style={paperStyles}>\n      <Table>\n        <TableHead id=\"TableHeadRow\">\n          <TableRow id=\"TableHeadRow\">\n            <TableCell id=\"TableHeadCell\">Event</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Arena</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Registration Count</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Event Capacity</TableCell>\n\n            <TableCell id=\"TableHeadCell\" align=\"right\">General Ticket Price</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Staff Ticket Price</TableCell>\n\n            <TableCell id=\"TableHeadCell\" align=\"right\">Event Day</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Event Start</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Event Duration</TableCell>\n            <TableCell id=\"TableHeadCell\" align=\"right\">Schedule</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listItems.map(row =>{\n          \n          return row.name.startsWith(\"(\") ? (\n\n            \n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">\n              <Select\n\n            value={row.arena}\n            onChange={this.handleArenaChange}\n            input={<Input name={row.name} id=\"arena-helper\" />}\n          >\n          {arenaOptions}\n          </Select>\n            \n            </TableCell>\n              <TableCell align=\"center\">{row.current}</TableCell>\n              <TableCell align=\"center\">{row.capacity}</TableCell>\n\n              <TableCell align=\"center\">free</TableCell>\n              <TableCell align=\"center\">free</TableCell>\n\n              <TableCell align=\"center\"><Input onBlur={(e) => this.handleDayChange(row.name, e)} name={\"\" +row.name} placeholder={\"\"+ row.day}></Input></TableCell>\n              <TableCell align=\"center\"><Input onBlur={(e) => this.handleStartChange(row.name, e)} name={\"\" +row.name} placeholder={\"\"+ row.start}></Input></TableCell>\n              <TableCell align=\"center\"><Input onBlur={(e) => this.handleDurationChange(row.name, e)} name={\"\" +row.name} placeholder={\"\"+ row.duration}></Input></TableCell>\n              <TableCell align=\"center\"><Button onClick={(e) => this.scheduleUpdate(row.name, row.day, row.start, row.duration, e)} name={\"\" +row.name} placeholder={\"\"+ row.duration}>Schedule</Button></TableCell>\n\n            </TableRow>\n          ) : (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">\n              <Select\n\n            value={row.arena}\n            onChange={this.handleArenaChange}\n            input={<Input name={row.name} id=\"arena-helper\" />}\n          >\n          {arenaOptions}\n          </Select>\n            \n            </TableCell>\n              <TableCell align=\"center\">{row.current}</TableCell>\n              <TableCell align=\"center\">{row.capacity}</TableCell>\n\n              <TableCell align=\"center\">$ <Input onBlur={this.handlePublicPriceChange} name={row.name} placeholder={\"\" + row.ticketPrice}></Input></TableCell>\n              <TableCell align=\"center\">$ <Input onBlur={this.handleStaffPriceChange} name={row.name} placeholder={\"\"+ row.staffPrice}></Input></TableCell>\n\n              <TableCell align=\"center\"><Input onBlur={(e) => this.handleDayChange(row.name, e)} name={\"\" +row.name} placeholder={\"\"+ row.day}></Input></TableCell>\n              <TableCell align=\"center\"><Input onBlur={(e) => this.handleStartChange(row.name, e)} name={\"\" +row.name} placeholder={\"\"+ row.start}></Input></TableCell>\n              <TableCell align=\"center\"><Input onBlur={(e) => this.handleDurationChange(row.name, e)} name={\"\" +row.name} placeholder={\"\"+ row.duration}></Input></TableCell>\n              <TableCell align=\"center\"><Button onClick={(e) => this.scheduleUpdate(row.name, row.day, row.start, row.duration, e)} name={\"\" +row.name} placeholder={\"\"+ row.duration}>Schedule</Button></TableCell>\n\n            </TableRow>)})}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">All Events</p>\n        {t}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(AllEvents)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptCreateEvent, getAllEvents} from './actions/eventActions'\nimport AllEvents from './AllEvents';\nimport store from './store';\nimport Navigation from './Navigation';\n\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport { redirect } from './actions/redirectActions';\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors\n  };\n}\n\nclass CreateEvent extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: ''\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    attemptCreateEvent(this.state.name, this.state.duration, this.state.outdoors, this.state.aquatic, this.state.track, this.state.field)\n   \n    event.preventDefault();\n  }\n\n  render() {\n    if (this.props.errors.error == \"\") {\n      \n    }else if (this.props.errors.error == \"USER_TAKEN\") {\n      var e = (<p>Error! That username is already in use!</p>)\n    }\n    const s = (<div>\n      <AllEvents></AllEvents>\n      <br/>\n      <br/>\n      <br/>\n       \n        <form className=\"create-event-form\">\n        <p className=\"center-text\">Create an event</p>\n        <br></br>\n        <Input type=\"text\" name=\"name\" onChange={this.handleChange} placeholder=\"event name\"></Input>\n        <Input type=\"number\" name=\"duration\"  onChange={this.handleChange}  placeholder=\"event duration\"></Input>\n        <p>IS OUTDOORS? <input type=\"checkbox\" name=\"outdoors\"  onChange={this.handleChange}  placeholder=\"Is Outdoors?\"></input></p>\n        <p>IS AQUATIC? <input type=\"checkbox\" name=\"aquatic\"  onChange={this.handleChange}  placeholder=\"Is Aquatic?\"></input></p>\n        <p>HAS TRACK?  <input type=\"checkbox\" name=\"track\"  onChange={this.handleChange}  placeholder=\"Has Track?\"></input></p>\n        <p>HAS FIELD? <input type=\"checkbox\" name=\"field\"  onChange={this.handleChange}  placeholder=\"Has Field?\"></input> </p> \n        <br></br><br></br>\n        <Button type=\"submit\" name=\"submit\" color=\"primary\" onClick={this.handleSubmit} variant=\"contained\"placeholder=\"Create Event!\">Create Event</Button>\n    </form>\n    </div>\n    )\n\n    return s\n  }\n}\n\nexport default connect(mapStateToProps)(CreateEvent)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {getAllEvents, eventPair, eventStaffPrice, eventPublicPrice, schedule} from './actions/eventActions'\nimport store from './store';\nimport { redirect } from './actions/redirectActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {setOption} from './actions/internalActions.js'\nimport Button from '@material-ui/core/Button';\n\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateSecurity } from './actions/securityActions';\nimport { formatMs } from '@material-ui/core/styles/transitions';\nimport { athleteToggleEvent, athleteScheduleSigning, athleteSigningDrop } from './actions/athleteActions';\nimport Navigation from './Navigation.js';\n\n\nfunction mapStateToProps(state) {\n  return {\n    event: state.event,\n    arena: state.arena,\n    athlete : state.athlete,\n    user: state.user,\n    internal : state.internal\n  };\n}\n\nlet a = 0;\nlet b = 0;\nlet c = 0;\nlet user = \"\"\nfunction updateDay(e) {\n      a = e.target.value;\n\n}\n\nfunction updateStart(e) {\n    b = e.target.value;\n\n    b = parseInt(b/100) * 60 + b%100\n}\n\nfunction dropSigning(e, u) {\n    athleteSigningDrop(username, u)\n}\n\nfunction updateDuration(e) {\n    c = e.target.value;\n\n    c = parseInt(c/100) * 60 + c%100\n}\n\nfunction tryNewSigning() {\n    \n athleteScheduleSigning(arena, username, a, b, c)   \n}\n\nlet username = \"\"\nlet arena = \"Venue\"\nlet id = 0;\n\nfunction getScheduleButton(user, flag, eventName) {\n  var text = \"\"\n\n  if (flag) {\n    text = \"Commit\"\n    flag = \"on\"\n  }\n  else {\n    text = \"Dropout\"\n    flag = \"off\"\n  }\n  \n return ( <TableCell align=\"center\"><Button onClick={(e) => athleteToggleEvent(username, flag, eventName) } >{text}</Button></TableCell>)\n}\nfunction getData(name, arena,  day, start, duration,  flag) {\n  id += 1;\n\n  start = parseInt(start/60) * 100 + start%60\n  duration = parseInt(duration / 60 ) * 100 + duration%60\n\n  if (arena == null ) {\n    arena = \"TBD\"\n  } else {\n    arena = arena.Name\n  }\n\n  return { id, name, arena ,  day, start, duration,  flag};\n \n }\n\n\nclass AthleteSigningScheduler extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        username: '',\n        password: '',\n        data : []\n      };\n\n    this.needed = []\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleNeededChange = this.handleNeededChange.bind(this);\n    this.updateGuards = this.updateGuards.bind(this);\n  }\n\n  handleChange(event) {\n\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n  }\n\n  \n  handleNeededChange( event) {\n      console.log(event.target.name)\n      if (event.target.value != null)\n        this.needed[event.target.name] = event.target.value\n  }\n\n\n  updateGuards(eventName,needed, event) {\n\n        if(!(eventName in this.needed)) {\n            updateSecurity(eventName, needed)\n        } else\n            updateSecurity(eventName, this.needed[eventName])\n  }\n\n\n  render() {\n      username = this.props.user.username\n      var events = this.props.event.allEvents\n      var arenas = this.props.arena.allArenas\n      var arenaOptions = arenas.map((d) => (<MenuItem key={d.Name}  value={d.Name}>{d.Name}</MenuItem>))\n      var s = this.props.athlete.allAthletes\n\n      arena = this.props.internal.selectArena\n      let bio = {}\n  \n      for(var i = 0; i < s.length; i++) {\n        if (s[i].Username == this.props.user.username) {\n          bio = s[i]\n          break;\n        }\n      }\n\n      var propValue;\nfor(var propName in bio) {\n    propValue = bio[propName]\n\n    if(propName == \"EventsParticipating\")\n      break;\n}\n\n  if (propValue == null) {\n    propValue = []\n  }\n\n      events = events.map(d =>getData(d.Name, d.Arena, d.Day, d.StartTime, d.Duration, (propValue[d.Name] == null))) //this render needs to be completed)\n\n      events = events.filter(d => {\n        return (d.name.includes(this.props.user.firstname) && d.name.includes(this.props.user.lastname))\n      })\n\n      let tableStyle = {\n          \n      }\n\n      const paperStyles = {\n        padding: '20px',\n      };\n\n      var eventTable = (\n        <Paper style={paperStyles}>\n          <Table>\n            <TableHead>\n\n            <TableRow id=\"TableHeadRow\">\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Signing</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Arena</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Day</TableCell>\n                <TableCell id=\"TableHeadCell\"\n                align=\"center\">Start</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Duration</TableCell>\n                <TableCell \n                id=\"TableHeadCell\"\n                align=\"center\">Create</TableCell>\n              </TableRow>\n\n            <TableRow>\n                <TableCell align=\"center\">Create</TableCell><TableCell align=\"right\">\n              <Select\n\n            value={arena}\n            onChange={e => {\n              \n              arena = e.target.value\n              setOption(\"SELECT_ARENA\", arena)\n\n        }    \n    }\n            input={<Input name={\"arena\"} id=\"arena-helper\" />}\n          >\n          {arenaOptions}\n          </Select>\n            \n            </TableCell>\n                <TableCell align=\"center\"><Input type=\"number\" onChange={e => updateDay(e)} placeholder=\"Day\"></Input></TableCell>\n                <TableCell align=\"center\"><Input type=\"number\" onChange = {e => updateStart(e)}  placeholder=\"Start Time\"></Input></TableCell>\n                <TableCell align=\"center\"><Input type=\"number\"onChange = {e => updateDuration(e)} placeholder=\"Duration\"></Input></TableCell>\n                <TableCell align=\"center\"><Button color=\"primary\" onClick={e => tryNewSigning(e)}>Create Autograph Session</Button></TableCell>\n              </TableRow>\n              \n            </TableHead>\n            <TableBody>\n          \n            {events.map(row =>\n                  (\n                <TableRow key={row.id}>\n               \n               <TableCell align=\"center\">{row.name}</TableCell>\n                <TableCell align=\"center\">{row.arena}</TableCell>\n\n                <TableCell align=\"center\">{row.day}</TableCell>\n                <TableCell align=\"center\">{row.start}</TableCell>\n                <TableCell align=\"center\">{row.duration}</TableCell>\n                <TableCell align=\"center\"><Button onClick={e => dropSigning(e, row.name)}>{\"[X]\"}</Button></TableCell>\n                \n                </TableRow>\n              ))}\n\n\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n\n\n      return (\n        <div>\n            <p id=\"TitleOverTable\">Autograph Signing</p>\n            {eventTable}\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(AthleteSigningScheduler)","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {connect} from \"react-redux\"\n\nimport {attemptLogin, logout} from './actions/userActions'\nimport store from './store';\nimport Login from \"./Login\";\nimport CreateUser from \"./CreateUser\";\nimport Dashboard from \"./Dashboard\";\nimport NewArena from \"./NewArena\";\nimport CreateEvent from \"./CreateEvent\";\nimport AthleteSigningScheduler from './AthleteSigningScheduler';\nimport AthleteScheduler from './AthleteScheduler';\nimport PurchaseTickets from './PurchaseTickets.js';\nimport AthleteBio from './AthleteBio.js';\nimport MyEvents from './MyEvents.js';\nimport Navigation from './Navigation.js';\nimport ViewAthleteData from './ViewAthleteData';\nimport ViewEventData from './ViewEventData';\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    redirect: state.redirect\n  };\n}\n\nclass Mux extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n      var s \n\n        switch(this.props.redirect.page ) {\n            case \"LOGIN\": \n    \n                    s = (<div><Login/></div>)\n             break\n                case \"CREATE_USER\": \n             \n                    s = (<div><CreateUser/></div>)\n              break\n                case \"CREATE_ARENA\": \n         \n                   s = (<div><NewArena/></div>)\n            break\n                case \"CREATE_EVENT\": \n                \n                   s = ( <div><CreateEvent/></div>)\n                break\n                case \"DASHBOARD\": \n                    s =(      <div><Dashboard/></div>)\n                break\n                case \"SCHEDULE_SIGNING\": \n                \n                    s =(     <div><AthleteSigningScheduler/></div>)\n                    break\n                case \"ATHLETE_COMPETITION\": \n             \n                    s =(      <div><AthleteScheduler/><br/><AthleteSigningScheduler/></div>)\n                    break\n                case \"SET_BIO\": \n             \n                    s =(   <div><AthleteBio/></div>)\n                    break\n                case \"ATHLETE_PURCHASE\": \n            \n                    s =(   <div><PurchaseTickets/><br/><MyEvents></MyEvents></div>)\n                    break\n                case \"MY_EVENTS\": \n               \n                s =(    <div><MyEvents/></div>)\n                break\n                case \"VIEW_BIO\":\n                console.log(\"mux: \" + \"view bio\")\n                s =(    <div><ViewEventData/><br/><ViewAthleteData/></div>)\n                break\n\n                case \"SEARCH\": \n                s =(    <div><ViewEventData/><br/><ViewAthleteData/></div>)\n                break\n            case \"PURCHASE\": \n            \n            s =(   <div><PurchaseTickets/><br/><MyEvents></MyEvents></div>)\n            break\n\n        }\n\n        if (this.props.redirect.page == \"LOGIN\" || this.props.redirect.page == \"CREATE_USER\") {\n            return (<div>{s}</div>)\n        }\n\n        return (  (<div>\n                <Navigation>\n\n                </Navigation>\n\n                {s}\n         </div>   \n        ))\n\n  }\n}\n\nexport default connect(mapStateToProps)(Mux)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Mux from './Mux';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\"\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(<Provider store={store}>\n<Mux />\n</Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}